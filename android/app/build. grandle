apply plugin: 'com.android.application'

android {
    namespace "com.cognitiveelitepro.app"
    compileSdk 35
    buildToolsVersion "35.0.0"
    defaultConfig {
        applicationId "com.cognitiveelitepro.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion 35
        versionCode 4
        versionName "1.3"
        
        // 16 KB page size support (REQUIRED November 1, 2025 for Android 15+)
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
        
        // Force NDK to use API 35 to prevent warnings
        ndkVersion "26.1.10909125"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
  signingConfigs {
    release {
        // Google Play will handle signing via Play App Signing
    }
}
    }
   
 buildTypes {
    release {
        // Google Play App Signing will handle signing
        minifyEnabled true
        shrinkResources true
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
}
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    lint {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
        quiet true
    }
    
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
}

repositories {
    google()
    mavenCentral()
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    
    // Google Play Billing Library 7.0.0+ (REQUIRED by August 30, 2025)
    implementation 'com.android.billingclient:billing:7.1.1'
    
    // Google Play Services for Advertising ID (Android 13+ compliance)
    implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
    implementation 'com.google.android.gms:play-services-appset:16.0.2'
    
    // Privacy Sandbox APIs for Android 13+
    implementation 'androidx.privacysandbox.ads:ads-adservices:1.0.0-beta05'
    implementation 'androidx.privacysandbox.ads:ads-adservices-java:1.0.0-beta05'
    
    // AdMob SDK (optional - if using ads)
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
    
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
